/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var parser = (function(){
var parser = {trace: function trace(){},
yy: {},
symbols_: {"error":2,"code":3,"GLOBAL":4,"{":5,"globalvars":6,"}":7,"definitions":8,"commands":9,"EOF":10,"globalvars1":11,"globalvar":12,"numvarassign":13,"colorvarassign":14,"boolvarassign":15,"rotationvarassign":16,"definition":17,"DEFCOMMAND":18,"NAME":19,"command":20,"(":21,"params":22,")":23,"params1":24,",":25,"NUMBERNAME":26,"COLORNAME":27,"BOOLNAME":28,"ROTATIONNAME":29,"commands1":30,"simplecommand":31,"IF":32,"condition":33,"THEN":34,"ELSE":35,"WHILE":36,"REPEAT":37,"expression":38,"BREAK":39,"callparams":40,"PUT":41,"color":42,"STEP":43,"TURN":44,"PICK":45,"TURNOFF":46,"SELF":47,"RETURN":48,"callparams1":49,"rotation":50,"ASSIGN":51,"NUMBER":52,"+":53,"-":54,"*":55,"DIV":56,"%":57,"ABS":58,"HEIGHT":59,"TRUE":60,"FALSE":61,"IS":62,"HOLE":63,"CLIFF":64,"WALL":65,"FREE":66,"BRICK":67,"HAS":68,"FACING":69,"NOTHAS":70,"AND":71,"OR":72,"NOT":73,"<":74,">":75,"LT":76,"MT":77,"EQUALS":78,"NOTEQUALS":79,"COLOR":80,"RIGHT":81,"UP":82,"LEFT":83,"DOWN":84,"$accept":0,"$end":1},
terminals_: {2:"error",4:"GLOBAL",5:"{",7:"}",10:"EOF",18:"DEFCOMMAND",19:"NAME",21:"(",23:")",25:",",26:"NUMBERNAME",27:"COLORNAME",28:"BOOLNAME",29:"ROTATIONNAME",32:"IF",34:"THEN",35:"ELSE",36:"WHILE",37:"REPEAT",39:"BREAK",41:"PUT",43:"STEP",44:"TURN",45:"PICK",46:"TURNOFF",47:"SELF",48:"RETURN",51:"ASSIGN",52:"NUMBER",53:"+",54:"-",55:"*",56:"DIV",57:"%",58:"ABS",59:"HEIGHT",60:"TRUE",61:"FALSE",62:"IS",63:"HOLE",64:"CLIFF",65:"WALL",66:"FREE",67:"BRICK",68:"HAS",69:"FACING",70:"NOTHAS",71:"AND",72:"OR",73:"NOT",74:"<",75:">",76:"LT",77:"MT",78:"EQUALS",79:"NOTEQUALS",80:"COLOR",81:"RIGHT",82:"UP",83:"LEFT",84:"DOWN"},
productions_: [0,[3,7],[3,3],[3,6],[3,2],[6,0],[6,1],[11,1],[11,2],[11,2],[11,2],[11,2],[12,1],[12,1],[12,1],[12,1],[8,1],[8,2],[17,3],[17,6],[22,0],[22,1],[24,3],[24,1],[24,3],[24,1],[24,3],[24,1],[24,3],[24,1],[9,0],[9,1],[30,2],[30,1],[20,1],[20,1],[20,1],[20,1],[20,2],[20,2],[20,2],[20,2],[20,1],[20,4],[20,6],[20,4],[20,2],[20,3],[20,1],[20,1],[20,4],[20,2],[20,3],[31,1],[31,1],[31,1],[31,2],[31,2],[40,0],[40,1],[49,3],[49,3],[49,3],[49,3],[49,1],[49,1],[49,1],[49,1],[14,3],[13,3],[15,3],[16,3],[38,1],[38,3],[38,3],[38,3],[38,3],[38,3],[38,3],[38,2],[38,3],[38,1],[38,1],[38,2],[33,1],[33,1],[33,2],[33,2],[33,2],[33,2],[33,2],[33,2],[33,2],[33,2],[33,2],[33,2],[33,3],[33,3],[33,2],[33,3],[33,3],[33,3],[33,3],[33,3],[33,3],[33,3],[33,3],[33,3],[33,3],[33,3],[33,3],[33,1],[33,2],[33,3],[42,1],[42,1],[42,2],[50,1],[50,2],[50,1],[50,1],[50,1],[50,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:
        this.$ = $$[$0-2];
        this.$.__globalvars__ = $$[$0-4];
        this.$.__globalvars__['commands']=[];
        this.$.__globalvars__['params']=[];
        this.$.__main__ = {'params':[], 'commands':$$[$0-1].concat([{'command':'turn-off'}])};
        return this.$;
     
break;
case 2:
        this.$ = $$[$0-2];
        this.$.__globalvars__ = [];
        this.$.__globalvars__['commands']=[];
        this.$.__globalvars__['params']=[];
        this.$.__main__ = {'params':[], 'commands':$$[$0-1].concat([{'command':'turn-off'}])};
        return this.$;
     
break;
case 3:
        this.$ = new Object();
        this.$.__globalvars__ = $$[$0-3];
        this.$.__globalvars__['commands']=[];
        this.$.__globalvars__['params']=[];
        this.$.__main__ = {'params':[], 'commands':$$[$0-1].concat([{'command':'turn-off'}])};
        return this.$;
     
break;
case 4:
        this.$ = new Object();
        this.$.__globalvars__ = [];
        this.$.__globalvars__['commands']=[];
        this.$.__globalvars__['params']=[];
        this.$.__main__ = {'params':[], 'commands': $$[$0-1].concat([{'command':'turn-off'}])};
        return this.$;
     
break;
case 5:
                this.$ = []
           
break;
case 6:
                this.$ = $$[$0];
           
break;
case 7:
                this.$ = $$[$0];
            
break;
case 8:
                this.$ = $$[$0-1];
                this.$.push($$[$0]);
            
break;
case 9:
                this.$ = $$[$0-1];
                this.$.push($$[$0]);
            
break;
case 10:
                this.$ = $$[$0-1];
                this.$.push($$[$0]);
            
break;
case 11:
                this.$ = $$[$0-1];
                this.$.push($$[$0]);
            
break;
case 12:
              this.$ = [$$[$0]];
          
break;
case 13:
              this.$ = [$$[$0]];
          
break;
case 14:
              this.$ = [$$[$0]];
          
break;
case 15:
              this.$ = [$$[$0]];
          
break;
case 16:
                 this.$ = new Object();
                 this.$[$$[$0].name] = {
                       'params': $$[$0].params,
                       'commands': $$[$0].commands
                       };
             
break;
case 17:
                this.$ = $$[$0-1];
                this.$[$$[$0].name] = {
                             'params': $$[$0].params,
                             'commands': $$[$0].commands
                              };
            
break;
case 18:
                this.$ = {
                    'name' : $$[$0-1].toLowerCase(),
                    'params' : [],
                    'commands' : $$[$0].concat([{'command':'return'}])
                };
           
break;
case 19:
                this.$ = {
                    'name' : $$[$0-4].toLowerCase(),
                    'params' : $$[$0-2],
                    'commands' : $$[$0].concat([{'command':'return'}])
                };
           
break;
case 20:
            this.$ = [];
       
break;
case 21:
            this.$ = $$[$0];
       
break;
case 22:
             this.$ = $$[$0-2];
             this.$.push({'type':'number','value':$$[$0].toLowerCase()});
        
break;
case 23:
             this.$ = [{'type':'number','value':$$[$0].toLowerCase()}];
        
break;
case 24:
             this.$ = $$[$0-2];
             this.$.push({'type':'color','value':$$[$0].toLowerCase()});
        
break;
case 25:
             this.$ = [{'type':'color','value':$$[$0].toLowerCase()}];
        
break;
case 26:
             this.$ = $$[$0-2];
             this.$.push({'type':'bool','value':$$[$0].toLowerCase()});
        
break;
case 27:
             this.$ = [{'type':'bool','value':$$[$0].toLowerCase()}];
        
break;
case 28:
             this.$ = $$[$0-2];
             this.$.push({'type':'rotation','value':$$[$0].toLowerCase()});
        
break;
case 29:
             this.$ = [{'type':'rotation','value':$$[$0].toLowerCase()}];
        
break;
case 30: 
            this.$ = [];
         
break;
case 31:
            this.$ = $$[$0];
         
break;
case 32:
            this.$ = $$[$0-1].concat($$[$0]);
          
break;
case 33:
             this.$ = $$[$0];
          
break;
case 34: this.$ = [$$[$0]]; 
break;
case 35: this.$ = [$$[$0]]; 
break;
case 36: this.$ = [$$[$0]]; 
break;
case 37: this.$ = [$$[$0]]; 
break;
case 38: $$[$0]['global']=true; this.$ = [$$[$0]]; 
break;
case 39: $$[$0]['global']=true; this.$ = [$$[$0]]; 
break;
case 40: $$[$0]['global']=true; this.$ = [$$[$0]];  
break;
case 41: $$[$0]['global']=true; this.$ = [$$[$0]];  
break;
case 42:
            this.$ = [{
                'command' : $$[$0],
                'source' : {
                    'first_line'   : _$[$0].first_line,
                    'first_column' : _$[$0].first_column,
                    'last_line'   : _$[$0].last_line,
                    'last_column' : _$[$0].last_column
                }
            }];
        
break;
case 43:
            this.$ = [{
                    'command' : 'if',
                    'value' : $$[$0-2],
                    'else' : $$[$0].length+1,
                    'source' : {
                        'first_line'   : _$[$0-3].first_line,
                        'first_column' : _$[$0-3].first_column,
                        'last_line'   : _$[$0-2].last_line,
                        'last_column' : _$[$0-2].last_column
                    }
                }].concat($$[$0]);
        
break;
case 44:
            this.$ = [{
                'command' : 'if',
                'value' : $$[$0-4],
                'else' : $$[$0-2].length+2,
                'source' : {
                    'first_line'   : _$[$0-5].first_line,
                    'first_column' : _$[$0-5].first_column,
                    'last_line'   : _$[$0-4].last_line,
                    'last_column' : _$[$0-4].last_column
                }
            }].concat($$[$0-2]);
            this.$.push({'command' : 'jump', 'value': $$[$0].length+1});
            this.$ = this.$.concat($$[$0]);
        
break;
case 45:
            this.$ = [{
                'command' : 'while',
                'value' : $$[$0-2],
                'end' : $$[$0].length+2,
                'source' : {
                    'first_line'   : _$[$0-3].first_line,
                    'first_column' : _$[$0-3].first_column,
                    'last_line'   : _$[$0-1].last_line,
                    'last_column' : _$[$0-1].last_column
                }
            }].concat($$[$0]);
            for (var i=0; i<$$[$0].length; i++) if (($$[$0][i].command=='break')&&($$[$0][i].value==0))
                $$[$0][i].value=-i-1;
            this.$.push({'command' : 'jump', 'value': -$$[$0].length-1});
        
break;
case 46:
            this.$ = [{
                'command' : 'repeat',
                'value' : 0,
                'infinite' : true,
                'end' : $$[$0].length+2,
                'source' : {
                    'first_line'   : _$[$0-1].first_line,
                    'first_column' : _$[$0-1].first_column,
                    'last_line'   : _$[$0-1].last_line,
                    'last_column' : _$[$0-1].last_column
                }
            }].concat($$[$0]);         
            for (var i=0; i<$$[$0].length; i++) if (($$[$0][i].command=='break')&&($$[$0][i].value==0))
                $$[$0][i].value=-i-1;
            this.$.push({'command' : 'jump', 'value': -$$[$0].length-1});
        
break;
case 47:
            this.$ = [{
                'command' : 'repeat',
                'value' : $$[$0-1],
                'infinite' : false,
                'end' : $$[$0].length+2,
                'source' : {
                    'first_line'   : _$[$0-2].first_line,
                    'first_column' : _$[$0-2].first_column,
                    'last_line'   : _$[$0-1].last_line,
                    'last_column' : _$[$0-1].last_column
                }
            }].concat($$[$0]);
            for (var i=0; i<$$[$0].length; i++) if (($$[$0][i].command=='break')&&($$[$0][i].value==0))
                $$[$0][i].value=-i-1;
            this.$.push({'command' : 'jump', 'value': -$$[$0].length-1});
        
break;
case 48:
            this.$ = [{
                'command' : 'break',
                'value' : 0,
                'source' : {
                    'first_line'   : _$[$0].first_line,
                    'first_column' : _$[$0].first_column,
                    'last_line'   : _$[$0].last_line,
                    'last_column' : _$[$0].last_column
                }
            }];
        
break;
case 49:
            this.$ = [{
                'command' : 'call',
                'value' : $$[$0],
                'params' : [],
                'source' : {
                    'first_line'   : _$[$0].first_line,
                    'first_column' : _$[$0].first_column,
                    'last_line'   : _$[$0].last_line,
                    'last_column' : _$[$0].last_column
                }
            }];
        
break;
case 50:
            this.$ = [{
                'command' : 'call',
                'value' : $$[$0-3],
                'params' : $$[$0-1],
                'source' : {
                    'first_line'   : _$[$0-3].first_line,
                    'first_column' : _$[$0-3].first_column,
                    'last_line'   : _$[$0].last_line,
                    'last_column' : _$[$0].last_column
                }
            }];
        
break;
case 51:
            this.$ = [{
                'command' : 'put',
                'value' : $$[$0],
                'source' : {
                    'first_line'   : _$[$0-1].first_line,
                    'first_column' : _$[$0-1].first_column,
                    'last_line'   : _$[$0].last_line,
                    'last_column' : _$[$0].last_column
                }
            }];
        
break;
case 52:
            this.$ = $$[$0-1];
        
break;
case 53: 
                 this.$ = 'step'; 
              
break;
case 54: 
                 this.$ = 'turn'; 
              
break;
case 55: 
                 this.$ = 'pick'; 
              
break;
case 56: 
                 this.$ = 'turn-off'; 
              
break;
case 57: 
                 this.$ = 'return'; 
              
break;
case 58:
                this.$ = [];
           
break;
case 59:
                this.$ = $$[$0];
           
break;
case 60:
                this.$ = $$[$0-2];
                this.$.push({type:'number', value:$$[$0]})
            
break;
case 61:
                this.$ = $$[$0-2];
                this.$.push({type:'color', value:$$[$0]})
            
break;
case 62:
                this.$ = $$[$0-2];
                this.$.push({type:'bool', value:$$[$0]})
            
break;
case 63:
                this.$ = $$[$0-2];
                this.$.push({type:'rotation', value:$$[$0]})
            
break;
case 64:
                this.$ = [{type:'number', value:$$[$0]}];
            
break;
case 65:
                this.$ = [{type:'color', value:$$[$0]}];
            
break;
case 66:
                this.$ = [{type:'bool', value:$$[$0]}];
            
break;
case 67:
                this.$ = [{type:'rotation', value:$$[$0]}];
            
break;
case 68:
                    this.$ = {
                        'command':'assign-color',
                        'name':$$[$0-2].toLowerCase(),
                        'value':$$[$0],
                        'global':false,
                        'source' : {
                            'first_line'   : _$[$0-2].first_line,
                            'first_column' : _$[$0-2].first_column,
                            'last_line'   : _$[$0].last_line,
                            'last_column' : _$[$0].last_column
                        }
                    };
               
break;
case 69:
                    this.$ = {
                        'command':'assign-number',
                        'name':$$[$0-2].toLowerCase(),
                        'value':$$[$0],
                        'global':false,
                        'source' : {
                            'first_line'   : _$[$0-2].first_line,
                            'first_column' : _$[$0-2].first_column,
                            'last_line'   : _$[$0].last_line,
                            'last_column' : _$[$0].last_column
                        }
                    };
             
break;
case 70:
                    this.$ = {
                        'command':'assign-bool',
                        'name':$$[$0-2].toLowerCase(),
                        'value':$$[$0],
                        'global':false,
                        'source' : {
                            'first_line'   : _$[$0-2].first_line,
                            'first_column' : _$[$0-2].first_column,
                            'last_line'   : _$[$0].last_line,
                            'last_column' : _$[$0].last_column
                        }
                    };
             
break;
case 71:
                    this.$ = {
                        'command':'assign-rotation',
                        'name':$$[$0-2].toLowerCase(),
                        'value':$$[$0],
                        'global':false,
                        'source' : {
                            'first_line'   : _$[$0-2].first_line,
                            'first_column' : _$[$0-2].first_column,
                            'last_line'   : _$[$0].last_line,
                            'last_column' : _$[$0].last_column
                        }
                    };
             
break;
case 72:
                this.$ = function(env) {
                    return Number($$[$0]);
                };
           
break;
case 73:
                this.$ = function(env) { 
                    return $$[$0-2](env) + $$[$0](env);
                };
           
break;
case 74:
                this.$ = function(env) { 
                    return $$[$0-2](env) - $$[$0](env);
                };
           
break;
case 75:
                this.$ = function(env) { 
                    return $$[$0-2](env) * $$[$0](env);
                };
           
break;
case 76:
                this.$ = function(env) { 
                    return $$[$0-2](env) / $$[$0](env);
                };
           
break;
case 77:
                this.$ = function(env) { 
                    return $$[$0-2](env) % $$[$0](env);
                };
           
break;
case 78: 
                this.$ = function(world) { 
                    return Math.abs($$[$0-1](world));
                }; 
           
break;
case 79:
                this.$ = function(env) { 
                    return - $$[$0](env);
                };
           
break;
case 80:
                this.$ = $$[$0-1];
           
break;
case 81:
                this.$ = function(env) { 
                    return env.height();
                };
           
break;
case 82:
                this.$ = function(env) { 
                    return env.getVarNumber($$[$0].toLowerCase());
                };
           
break;
case 83:
                this.$ = function(env) { 
                    return env.getGlobalVarNumber($$[$0].toLowerCase());
                };
           
break;
case 84:
              this.$ = function(env) { 
                return true; 
              };
          
break;
case 85:
              this.$ = function(env) { 
                return false; 
              };
          
break;
case 86:
              this.$ = function(env) { 
                return env.isHole(); 
              };
          
break;
case 87:
              this.$ = function(env) { 
                return env.isCliff(); 
              };
          
break;
case 88:
              this.$ = function(env) { 
                return env.isWall(); 
              };
          
break;
case 89:
              this.$ = function(env) { 
                return env.isFree(); 
              };
          
break;
case 90:
              this.$ = function(env) { 
                return env.isBrick(); 
              };
          
break;
case 91:
              this.$ = function(env) { 
                return env.isColor($$[$0]); 
              };
          
break;
case 92:
              this.$ = function(env) { 
                return env.hasBrick(); 
              };
          
break;
case 93:
              this.$ = function(env) { 
                return env.facing($$[$0]); 
              };
          
break;
case 94:
              this.$ = function(env) { 
                return env.hasColor($$[$0]); 
              };
          
break;
case 95:
              this.$ = function(env) { 
                return !env.hasColor($$[$0]); 
              };
          
break;
case 96:
              this.$ = function(env) { 
                return ($$[$0-2](env) && $$[$0](env)); 
              };
          
break;
case 97:
              this.$ = function(env) { 
                return ($$[$0-2](env) || $$[$0](env)); 
              };
          
break;
case 98:
              this.$ = function(env) { 
                return !($$[$0](env)); 
              };
          
break;
case 99:
              this.$ = function(env) { 
                return ($$[$0-2](env) < $$[$0](env)); 
              };
          
break;
case 100:
              this.$ = function(env) { 
                return ($$[$0-2](env) > $$[$0](env)); 
              };
          
break;
case 101:
              this.$ = function(env) { 
                return ($$[$0-2](env) <= $$[$0](env)); 
              };
          
break;
case 102:
              this.$ = function(env) { 
                return ($$[$0-2](env) >= $$[$0](env)); 
              };
          
break;
case 103:
              this.$ = function(env) { 
                return ($$[$0-2](env) == $$[$0](env)); 
              };
          
break;
case 104:
              this.$ = function(env) { 
                return ($$[$0-2](env) != $$[$0](env)); 
              };
          
break;
case 105:
              this.$ = function(env) { 
                return ($$[$0-2](env) == $$[$0](env)); 
              };
          
break;
case 106:
              this.$ = function(env) { 
                return ($$[$0-2](env) != $$[$0](env)); 
              };
          
break;
case 107:
              this.$ = function(env) { 
                return ($$[$0-2](env) == $$[$0](env)); 
              };
          
break;
case 108:
              this.$ = function(env) { 
                return ($$[$0-2](env) != $$[$0](env)); 
              };
          
break;
case 109:
              this.$ = function(env) { 
                return ($$[$0-2](env) == $$[$0](env)); 
              };
          
break;
case 110:
              this.$ = function(env) {
                return ($$[$0-2](env) != $$[$0](env)); 
              };
          
break;
case 111:
              this.$ = function(env) { 
                return env.getVarBool($$[$0].toLowerCase());
              };
          
break;
case 112:
              this.$ = function(env) { 
                return env.getGlobalVarBool($$[$0].toLowerCase());
              };
          
break;
case 113:
                this.$ = $$[$0-1];
           
break;
case 114:
            this.$ = function(env) { 
                return yytext; 
            };
      
break;
case 115:
          this.$ = function(env) { 
            return env.getVarColor($$[$0].toLowerCase());
          };
      
break;
case 116:
          this.$ = function(env) { 
            return env.getGlobalVarColor($$[$0].toLowerCase());
          };
      
break;
case 117:
             this.$ = function(env) { 
                return env.getVarRotation($$[$0].toLowerCase());
             };
         
break;
case 118:
             this.$ = function(env) { 
                return env.getGlobalVarRotation($$[$0].toLowerCase());
             };
         
break;
case 119:
            this.$ = function(env) { 
                return 0;
            };
         
break;
case 120:
            this.$ = function(env) { 
                return 1;
            };
         
break;
case 121:
            this.$ = function(env) { 
                return 2;
            };
         
break;
case 122:
            this.$ = function(env) { 
                return 3;
            };
         
break;
}
},
table: [{3:1,4:[1,2],5:[1,20],8:3,9:4,10:[2,30],13:10,14:9,15:11,16:12,17:5,18:[1,7],19:[1,18],20:8,26:[1,22],27:[1,21],28:[1,23],29:[1,24],30:6,31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{1:[3]},{5:[1,30],13:32,14:31,15:33,16:34,26:[1,22],27:[1,21],28:[1,23],29:[1,24]},{4:[1,37],5:[1,20],9:35,10:[2,30],13:10,14:9,15:11,16:12,17:36,18:[1,7],19:[1,18],20:8,26:[1,22],27:[1,21],28:[1,23],29:[1,24],30:6,31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{10:[1,38]},{4:[2,16],5:[2,16],10:[2,16],18:[2,16],19:[2,16],26:[2,16],27:[2,16],28:[2,16],29:[2,16],32:[2,16],36:[2,16],37:[2,16],39:[2,16],41:[2,16],43:[2,16],44:[2,16],45:[2,16],46:[2,16],48:[2,16]},{4:[1,37],5:[1,20],7:[2,31],10:[2,31],13:10,14:9,15:11,16:12,19:[1,18],20:39,26:[1,22],27:[1,21],28:[1,23],29:[1,24],31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{19:[1,40]},{4:[2,33],5:[2,33],7:[2,33],10:[2,33],19:[2,33],26:[2,33],27:[2,33],28:[2,33],29:[2,33],32:[2,33],36:[2,33],37:[2,33],39:[2,33],41:[2,33],43:[2,33],44:[2,33],45:[2,33],46:[2,33],48:[2,33]},{4:[2,34],5:[2,34],7:[2,34],10:[2,34],18:[2,34],19:[2,34],26:[2,34],27:[2,34],28:[2,34],29:[2,34],32:[2,34],35:[2,34],36:[2,34],37:[2,34],39:[2,34],41:[2,34],43:[2,34],44:[2,34],45:[2,34],46:[2,34],48:[2,34]},{4:[2,35],5:[2,35],7:[2,35],10:[2,35],18:[2,35],19:[2,35],26:[2,35],27:[2,35],28:[2,35],29:[2,35],32:[2,35],35:[2,35],36:[2,35],37:[2,35],39:[2,35],41:[2,35],43:[2,35],44:[2,35],45:[2,35],46:[2,35],48:[2,35]},{4:[2,36],5:[2,36],7:[2,36],10:[2,36],18:[2,36],19:[2,36],26:[2,36],27:[2,36],28:[2,36],29:[2,36],32:[2,36],35:[2,36],36:[2,36],37:[2,36],39:[2,36],41:[2,36],43:[2,36],44:[2,36],45:[2,36],46:[2,36],48:[2,36]},{4:[2,37],5:[2,37],7:[2,37],10:[2,37],18:[2,37],19:[2,37],26:[2,37],27:[2,37],28:[2,37],29:[2,37],32:[2,37],35:[2,37],36:[2,37],37:[2,37],39:[2,37],41:[2,37],43:[2,37],44:[2,37],45:[2,37],46:[2,37],48:[2,37]},{4:[2,42],5:[2,42],7:[2,42],10:[2,42],18:[2,42],19:[2,42],26:[2,42],27:[2,42],28:[2,42],29:[2,42],32:[2,42],35:[2,42],36:[2,42],37:[2,42],39:[2,42],41:[2,42],43:[2,42],44:[2,42],45:[2,42],46:[2,42],48:[2,42]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:41,38:49,42:50,50:51,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:67,38:49,42:50,50:51,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[1,70],5:[1,20],13:10,14:9,15:11,16:12,19:[1,18],20:68,21:[1,71],26:[1,72],27:[1,21],28:[1,23],29:[1,24],31:13,32:[1,14],36:[1,15],37:[1,16],38:69,39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29],52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[2,48],5:[2,48],7:[2,48],10:[2,48],18:[2,48],19:[2,48],26:[2,48],27:[2,48],28:[2,48],29:[2,48],32:[2,48],35:[2,48],36:[2,48],37:[2,48],39:[2,48],41:[2,48],43:[2,48],44:[2,48],45:[2,48],46:[2,48],48:[2,48]},{4:[2,49],5:[2,49],7:[2,49],10:[2,49],18:[2,49],19:[2,49],21:[1,73],26:[2,49],27:[2,49],28:[2,49],29:[2,49],32:[2,49],35:[2,49],36:[2,49],37:[2,49],39:[2,49],41:[2,49],43:[2,49],44:[2,49],45:[2,49],46:[2,49],48:[2,49]},{4:[1,75],27:[1,61],42:74,80:[1,60]},{4:[1,37],5:[1,20],7:[2,30],9:76,13:10,14:9,15:11,16:12,19:[1,18],20:8,26:[1,22],27:[1,21],28:[1,23],29:[1,24],30:6,31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{51:[1,77]},{51:[1,78]},{51:[1,79]},{51:[1,80]},{4:[2,53],5:[2,53],7:[2,53],10:[2,53],18:[2,53],19:[2,53],26:[2,53],27:[2,53],28:[2,53],29:[2,53],32:[2,53],35:[2,53],36:[2,53],37:[2,53],39:[2,53],41:[2,53],43:[2,53],44:[2,53],45:[2,53],46:[2,53],48:[2,53]},{4:[2,54],5:[2,54],7:[2,54],10:[2,54],18:[2,54],19:[2,54],26:[2,54],27:[2,54],28:[2,54],29:[2,54],32:[2,54],35:[2,54],36:[2,54],37:[2,54],39:[2,54],41:[2,54],43:[2,54],44:[2,54],45:[2,54],46:[2,54],48:[2,54]},{4:[2,55],5:[2,55],7:[2,55],10:[2,55],18:[2,55],19:[2,55],26:[2,55],27:[2,55],28:[2,55],29:[2,55],32:[2,55],35:[2,55],36:[2,55],37:[2,55],39:[2,55],41:[2,55],43:[2,55],44:[2,55],45:[2,55],46:[2,55],48:[2,55]},{47:[1,81]},{47:[1,82]},{6:83,7:[2,5],11:84,12:85,13:86,14:87,15:88,16:89,26:[1,22],27:[1,21],28:[1,23],29:[1,24]},{4:[2,38],5:[2,38],7:[2,38],10:[2,38],18:[2,38],19:[2,38],26:[2,38],27:[2,38],28:[2,38],29:[2,38],32:[2,38],35:[2,38],36:[2,38],37:[2,38],39:[2,38],41:[2,38],43:[2,38],44:[2,38],45:[2,38],46:[2,38],48:[2,38]},{4:[2,39],5:[2,39],7:[2,39],10:[2,39],18:[2,39],19:[2,39],26:[2,39],27:[2,39],28:[2,39],29:[2,39],32:[2,39],35:[2,39],36:[2,39],37:[2,39],39:[2,39],41:[2,39],43:[2,39],44:[2,39],45:[2,39],46:[2,39],48:[2,39]},{4:[2,40],5:[2,40],7:[2,40],10:[2,40],18:[2,40],19:[2,40],26:[2,40],27:[2,40],28:[2,40],29:[2,40],32:[2,40],35:[2,40],36:[2,40],37:[2,40],39:[2,40],41:[2,40],43:[2,40],44:[2,40],45:[2,40],46:[2,40],48:[2,40]},{4:[2,41],5:[2,41],7:[2,41],10:[2,41],18:[2,41],19:[2,41],26:[2,41],27:[2,41],28:[2,41],29:[2,41],32:[2,41],35:[2,41],36:[2,41],37:[2,41],39:[2,41],41:[2,41],43:[2,41],44:[2,41],45:[2,41],46:[2,41],48:[2,41]},{10:[1,90]},{4:[2,17],5:[2,17],10:[2,17],18:[2,17],19:[2,17],26:[2,17],27:[2,17],28:[2,17],29:[2,17],32:[2,17],36:[2,17],37:[2,17],39:[2,17],41:[2,17],43:[2,17],44:[2,17],45:[2,17],46:[2,17],48:[2,17]},{13:32,14:31,15:33,16:34,26:[1,22],27:[1,21],28:[1,23],29:[1,24]},{1:[2,4]},{4:[2,32],5:[2,32],7:[2,32],10:[2,32],19:[2,32],26:[2,32],27:[2,32],28:[2,32],29:[2,32],32:[2,32],36:[2,32],37:[2,32],39:[2,32],41:[2,32],43:[2,32],44:[2,32],45:[2,32],46:[2,32],48:[2,32]},{4:[1,37],5:[1,20],13:10,14:9,15:11,16:12,19:[1,18],20:91,21:[1,92],26:[1,22],27:[1,21],28:[1,23],29:[1,24],31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{34:[1,93],71:[1,94],72:[1,95],78:[1,96],79:[1,97]},{4:[2,84],5:[2,84],7:[2,84],10:[2,84],18:[2,84],19:[2,84],23:[2,84],25:[2,84],26:[2,84],27:[2,84],28:[2,84],29:[2,84],32:[2,84],34:[2,84],35:[2,84],36:[2,84],37:[2,84],39:[2,84],41:[2,84],43:[2,84],44:[2,84],45:[2,84],46:[2,84],48:[2,84],71:[2,84],72:[2,84],78:[2,84],79:[2,84]},{4:[2,85],5:[2,85],7:[2,85],10:[2,85],18:[2,85],19:[2,85],23:[2,85],25:[2,85],26:[2,85],27:[2,85],28:[2,85],29:[2,85],32:[2,85],34:[2,85],35:[2,85],36:[2,85],37:[2,85],39:[2,85],41:[2,85],43:[2,85],44:[2,85],45:[2,85],46:[2,85],48:[2,85],71:[2,85],72:[2,85],78:[2,85],79:[2,85]},{4:[1,75],27:[1,61],42:103,63:[1,98],64:[1,99],65:[1,100],66:[1,101],67:[1,102],80:[1,60]},{4:[1,75],27:[1,61],42:105,67:[1,104],80:[1,60]},{4:[1,107],29:[1,62],50:106,81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[1,75],27:[1,61],42:108,80:[1,60]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:109,38:49,42:50,50:51,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],74:[1,110],75:[1,111],76:[1,112],77:[1,113],78:[1,114],79:[1,115]},{78:[1,121],79:[1,122]},{78:[1,123],79:[1,124]},{4:[2,111],5:[2,111],7:[2,111],10:[2,111],18:[2,111],19:[2,111],23:[2,111],25:[2,111],26:[2,111],27:[2,111],28:[2,111],29:[2,111],32:[2,111],34:[2,111],35:[2,111],36:[2,111],37:[2,111],39:[2,111],41:[2,111],43:[2,111],44:[2,111],45:[2,111],46:[2,111],48:[2,111],71:[2,111],72:[2,111],78:[2,111],79:[2,111]},{26:[1,126],27:[1,127],28:[1,125],29:[1,128]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:129,38:130,42:50,50:51,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[2,72],5:[2,72],7:[2,72],10:[2,72],18:[2,72],19:[2,72],23:[2,72],25:[2,72],26:[2,72],27:[2,72],28:[2,72],29:[2,72],32:[2,72],34:[2,72],35:[2,72],36:[2,72],37:[2,72],39:[2,72],41:[2,72],43:[2,72],44:[2,72],45:[2,72],46:[2,72],48:[2,72],53:[2,72],54:[2,72],55:[2,72],56:[2,72],57:[2,72],58:[2,72],71:[2,72],72:[2,72],74:[2,72],75:[2,72],76:[2,72],77:[2,72],78:[2,72],79:[2,72]},{4:[1,132],21:[1,71],26:[1,59],38:131,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:133,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[2,81],5:[2,81],7:[2,81],10:[2,81],18:[2,81],19:[2,81],23:[2,81],25:[2,81],26:[2,81],27:[2,81],28:[2,81],29:[2,81],32:[2,81],34:[2,81],35:[2,81],36:[2,81],37:[2,81],39:[2,81],41:[2,81],43:[2,81],44:[2,81],45:[2,81],46:[2,81],48:[2,81],53:[2,81],54:[2,81],55:[2,81],56:[2,81],57:[2,81],58:[2,81],71:[2,81],72:[2,81],74:[2,81],75:[2,81],76:[2,81],77:[2,81],78:[2,81],79:[2,81]},{4:[2,82],5:[2,82],7:[2,82],10:[2,82],18:[2,82],19:[2,82],23:[2,82],25:[2,82],26:[2,82],27:[2,82],28:[2,82],29:[2,82],32:[2,82],34:[2,82],35:[2,82],36:[2,82],37:[2,82],39:[2,82],41:[2,82],43:[2,82],44:[2,82],45:[2,82],46:[2,82],48:[2,82],53:[2,82],54:[2,82],55:[2,82],56:[2,82],57:[2,82],58:[2,82],71:[2,82],72:[2,82],74:[2,82],75:[2,82],76:[2,82],77:[2,82],78:[2,82],79:[2,82]},{4:[2,114],5:[2,114],7:[2,114],10:[2,114],18:[2,114],19:[2,114],23:[2,114],25:[2,114],26:[2,114],27:[2,114],28:[2,114],29:[2,114],32:[2,114],34:[2,114],35:[2,114],36:[2,114],37:[2,114],39:[2,114],41:[2,114],43:[2,114],44:[2,114],45:[2,114],46:[2,114],48:[2,114],71:[2,114],72:[2,114],78:[2,114],79:[2,114]},{4:[2,115],5:[2,115],7:[2,115],10:[2,115],18:[2,115],19:[2,115],23:[2,115],25:[2,115],26:[2,115],27:[2,115],28:[2,115],29:[2,115],32:[2,115],34:[2,115],35:[2,115],36:[2,115],37:[2,115],39:[2,115],41:[2,115],43:[2,115],44:[2,115],45:[2,115],46:[2,115],48:[2,115],71:[2,115],72:[2,115],78:[2,115],79:[2,115]},{4:[2,117],5:[2,117],7:[2,117],10:[2,117],18:[2,117],19:[2,117],23:[2,117],25:[2,117],26:[2,117],27:[2,117],28:[2,117],29:[2,117],32:[2,117],34:[2,117],35:[2,117],36:[2,117],37:[2,117],39:[2,117],41:[2,117],43:[2,117],44:[2,117],45:[2,117],46:[2,117],48:[2,117],71:[2,117],72:[2,117],78:[2,117],79:[2,117]},{4:[2,119],5:[2,119],7:[2,119],10:[2,119],18:[2,119],19:[2,119],23:[2,119],25:[2,119],26:[2,119],27:[2,119],28:[2,119],29:[2,119],32:[2,119],34:[2,119],35:[2,119],36:[2,119],37:[2,119],39:[2,119],41:[2,119],43:[2,119],44:[2,119],45:[2,119],46:[2,119],48:[2,119],71:[2,119],72:[2,119],78:[2,119],79:[2,119]},{4:[2,120],5:[2,120],7:[2,120],10:[2,120],18:[2,120],19:[2,120],23:[2,120],25:[2,120],26:[2,120],27:[2,120],28:[2,120],29:[2,120],32:[2,120],34:[2,120],35:[2,120],36:[2,120],37:[2,120],39:[2,120],41:[2,120],43:[2,120],44:[2,120],45:[2,120],46:[2,120],48:[2,120],71:[2,120],72:[2,120],78:[2,120],79:[2,120]},{4:[2,121],5:[2,121],7:[2,121],10:[2,121],18:[2,121],19:[2,121],23:[2,121],25:[2,121],26:[2,121],27:[2,121],28:[2,121],29:[2,121],32:[2,121],34:[2,121],35:[2,121],36:[2,121],37:[2,121],39:[2,121],41:[2,121],43:[2,121],44:[2,121],45:[2,121],46:[2,121],48:[2,121],71:[2,121],72:[2,121],78:[2,121],79:[2,121]},{4:[2,122],5:[2,122],7:[2,122],10:[2,122],18:[2,122],19:[2,122],23:[2,122],25:[2,122],26:[2,122],27:[2,122],28:[2,122],29:[2,122],32:[2,122],34:[2,122],35:[2,122],36:[2,122],37:[2,122],39:[2,122],41:[2,122],43:[2,122],44:[2,122],45:[2,122],46:[2,122],48:[2,122],71:[2,122],72:[2,122],78:[2,122],79:[2,122]},{34:[1,134],71:[1,94],72:[1,95],78:[1,96],79:[1,97]},{4:[2,46],5:[2,46],7:[2,46],10:[2,46],18:[2,46],19:[2,46],26:[2,46],27:[2,46],28:[2,46],29:[2,46],32:[2,46],35:[2,46],36:[2,46],37:[2,46],39:[2,46],41:[2,46],43:[2,46],44:[2,46],45:[2,46],46:[2,46],48:[2,46]},{4:[1,37],5:[1,20],13:10,14:9,15:11,16:12,19:[1,18],20:135,26:[1,22],27:[1,21],28:[1,23],29:[1,24],31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120]},{13:32,14:31,15:33,16:34,26:[1,136],27:[1,21],28:[1,23],29:[1,24]},{4:[1,132],21:[1,71],26:[1,59],38:137,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[2,82],5:[2,82],19:[2,82],26:[2,82],27:[2,82],28:[2,82],29:[2,82],32:[2,82],36:[2,82],37:[2,82],39:[2,82],41:[2,82],43:[2,82],44:[2,82],45:[2,82],46:[2,82],48:[2,82],51:[1,78],53:[2,82],54:[2,82],55:[2,82],56:[2,82],57:[2,82]},{4:[1,53],21:[1,54],23:[2,58],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:142,38:140,40:138,42:141,49:139,50:143,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[2,51],5:[2,51],7:[2,51],10:[2,51],18:[2,51],19:[2,51],26:[2,51],27:[2,51],28:[2,51],29:[2,51],32:[2,51],35:[2,51],36:[2,51],37:[2,51],39:[2,51],41:[2,51],43:[2,51],44:[2,51],45:[2,51],46:[2,51],48:[2,51]},{27:[1,127]},{7:[1,144]},{4:[1,75],27:[1,61],42:145,80:[1,60]},{4:[1,132],21:[1,71],26:[1,59],38:146,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:147,38:49,42:50,50:51,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[1,107],29:[1,62],50:148,81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[2,56],5:[2,56],7:[2,56],10:[2,56],18:[2,56],19:[2,56],26:[2,56],27:[2,56],28:[2,56],29:[2,56],32:[2,56],35:[2,56],36:[2,56],37:[2,56],39:[2,56],41:[2,56],43:[2,56],44:[2,56],45:[2,56],46:[2,56],48:[2,56]},{4:[2,57],5:[2,57],7:[2,57],10:[2,57],18:[2,57],19:[2,57],26:[2,57],27:[2,57],28:[2,57],29:[2,57],32:[2,57],35:[2,57],36:[2,57],37:[2,57],39:[2,57],41:[2,57],43:[2,57],44:[2,57],45:[2,57],46:[2,57],48:[2,57]},{7:[1,149]},{7:[2,6],13:150,14:151,15:152,16:153,26:[1,22],27:[1,21],28:[1,23],29:[1,24]},{7:[2,7],26:[2,7],27:[2,7],28:[2,7],29:[2,7]},{7:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12]},{7:[2,13],26:[2,13],27:[2,13],28:[2,13],29:[2,13]},{7:[2,14],26:[2,14],27:[2,14],28:[2,14],29:[2,14]},{7:[2,15],26:[2,15],27:[2,15],28:[2,15],29:[2,15]},{1:[2,2]},{4:[2,18],5:[2,18],10:[2,18],18:[2,18],19:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],32:[2,18],36:[2,18],37:[2,18],39:[2,18],41:[2,18],43:[2,18],44:[2,18],45:[2,18],46:[2,18],48:[2,18]},{22:154,23:[2,20],24:155,26:[1,156],27:[1,157],28:[1,158],29:[1,159]},{4:[1,37],5:[1,20],13:10,14:9,15:11,16:12,19:[1,18],20:160,26:[1,22],27:[1,21],28:[1,23],29:[1,24],31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:161,38:49,42:50,50:51,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:162,38:49,42:50,50:51,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:163,38:49,42:50,50:51,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:164,38:49,42:50,50:51,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[2,86],5:[2,86],7:[2,86],10:[2,86],18:[2,86],19:[2,86],23:[2,86],25:[2,86],26:[2,86],27:[2,86],28:[2,86],29:[2,86],32:[2,86],34:[2,86],35:[2,86],36:[2,86],37:[2,86],39:[2,86],41:[2,86],43:[2,86],44:[2,86],45:[2,86],46:[2,86],48:[2,86],71:[2,86],72:[2,86],78:[2,86],79:[2,86]},{4:[2,87],5:[2,87],7:[2,87],10:[2,87],18:[2,87],19:[2,87],23:[2,87],25:[2,87],26:[2,87],27:[2,87],28:[2,87],29:[2,87],32:[2,87],34:[2,87],35:[2,87],36:[2,87],37:[2,87],39:[2,87],41:[2,87],43:[2,87],44:[2,87],45:[2,87],46:[2,87],48:[2,87],71:[2,87],72:[2,87],78:[2,87],79:[2,87]},{4:[2,88],5:[2,88],7:[2,88],10:[2,88],18:[2,88],19:[2,88],23:[2,88],25:[2,88],26:[2,88],27:[2,88],28:[2,88],29:[2,88],32:[2,88],34:[2,88],35:[2,88],36:[2,88],37:[2,88],39:[2,88],41:[2,88],43:[2,88],44:[2,88],45:[2,88],46:[2,88],48:[2,88],71:[2,88],72:[2,88],78:[2,88],79:[2,88]},{4:[2,89],5:[2,89],7:[2,89],10:[2,89],18:[2,89],19:[2,89],23:[2,89],25:[2,89],26:[2,89],27:[2,89],28:[2,89],29:[2,89],32:[2,89],34:[2,89],35:[2,89],36:[2,89],37:[2,89],39:[2,89],41:[2,89],43:[2,89],44:[2,89],45:[2,89],46:[2,89],48:[2,89],71:[2,89],72:[2,89],78:[2,89],79:[2,89]},{4:[2,90],5:[2,90],7:[2,90],10:[2,90],18:[2,90],19:[2,90],23:[2,90],25:[2,90],26:[2,90],27:[2,90],28:[2,90],29:[2,90],32:[2,90],34:[2,90],35:[2,90],36:[2,90],37:[2,90],39:[2,90],41:[2,90],43:[2,90],44:[2,90],45:[2,90],46:[2,90],48:[2,90],71:[2,90],72:[2,90],78:[2,90],79:[2,90]},{4:[2,91],5:[2,91],7:[2,91],10:[2,91],18:[2,91],19:[2,91],23:[2,91],25:[2,91],26:[2,91],27:[2,91],28:[2,91],29:[2,91],32:[2,91],34:[2,91],35:[2,91],36:[2,91],37:[2,91],39:[2,91],41:[2,91],43:[2,91],44:[2,91],45:[2,91],46:[2,91],48:[2,91],71:[2,91],72:[2,91],78:[2,91],79:[2,91]},{4:[2,92],5:[2,92],7:[2,92],10:[2,92],18:[2,92],19:[2,92],23:[2,92],25:[2,92],26:[2,92],27:[2,92],28:[2,92],29:[2,92],32:[2,92],34:[2,92],35:[2,92],36:[2,92],37:[2,92],39:[2,92],41:[2,92],43:[2,92],44:[2,92],45:[2,92],46:[2,92],48:[2,92],71:[2,92],72:[2,92],78:[2,92],79:[2,92]},{4:[2,94],5:[2,94],7:[2,94],10:[2,94],18:[2,94],19:[2,94],23:[2,94],25:[2,94],26:[2,94],27:[2,94],28:[2,94],29:[2,94],32:[2,94],34:[2,94],35:[2,94],36:[2,94],37:[2,94],39:[2,94],41:[2,94],43:[2,94],44:[2,94],45:[2,94],46:[2,94],48:[2,94],71:[2,94],72:[2,94],78:[2,94],79:[2,94]},{4:[2,93],5:[2,93],7:[2,93],10:[2,93],18:[2,93],19:[2,93],23:[2,93],25:[2,93],26:[2,93],27:[2,93],28:[2,93],29:[2,93],32:[2,93],34:[2,93],35:[2,93],36:[2,93],37:[2,93],39:[2,93],41:[2,93],43:[2,93],44:[2,93],45:[2,93],46:[2,93],48:[2,93],71:[2,93],72:[2,93],78:[2,93],79:[2,93]},{29:[1,128]},{4:[2,95],5:[2,95],7:[2,95],10:[2,95],18:[2,95],19:[2,95],23:[2,95],25:[2,95],26:[2,95],27:[2,95],28:[2,95],29:[2,95],32:[2,95],34:[2,95],35:[2,95],36:[2,95],37:[2,95],39:[2,95],41:[2,95],43:[2,95],44:[2,95],45:[2,95],46:[2,95],48:[2,95],71:[2,95],72:[2,95],78:[2,95],79:[2,95]},{4:[2,98],5:[2,98],7:[2,98],10:[2,98],18:[2,98],19:[2,98],23:[2,98],25:[2,98],26:[2,98],27:[2,98],28:[2,98],29:[2,98],32:[2,98],34:[2,98],35:[2,98],36:[2,98],37:[2,98],39:[2,98],41:[2,98],43:[2,98],44:[2,98],45:[2,98],46:[2,98],48:[2,98],71:[2,98],72:[2,98],78:[2,98],79:[2,98]},{4:[1,132],21:[1,71],26:[1,59],38:165,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:166,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:167,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:168,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:169,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:170,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:171,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:172,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:173,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:174,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,132],21:[1,71],26:[1,59],38:175,52:[1,55],54:[1,57],58:[1,56],59:[1,58]},{4:[1,75],27:[1,61],42:176,80:[1,60]},{4:[1,75],27:[1,61],42:177,80:[1,60]},{4:[1,107],29:[1,62],50:178,81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[1,107],29:[1,62],50:179,81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[2,112],5:[2,112],7:[2,112],10:[2,112],18:[2,112],19:[2,112],23:[2,112],25:[2,112],26:[2,112],27:[2,112],28:[2,112],29:[2,112],32:[2,112],34:[2,112],35:[2,112],36:[2,112],37:[2,112],39:[2,112],41:[2,112],43:[2,112],44:[2,112],45:[2,112],46:[2,112],48:[2,112],71:[2,112],72:[2,112],78:[2,112],79:[2,112]},{4:[2,83],5:[2,83],7:[2,83],10:[2,83],18:[2,83],19:[2,83],23:[2,83],25:[2,83],26:[2,83],27:[2,83],28:[2,83],29:[2,83],32:[2,83],34:[2,83],35:[2,83],36:[2,83],37:[2,83],39:[2,83],41:[2,83],43:[2,83],44:[2,83],45:[2,83],46:[2,83],48:[2,83],53:[2,83],54:[2,83],55:[2,83],56:[2,83],57:[2,83],58:[2,83],71:[2,83],72:[2,83],74:[2,83],75:[2,83],76:[2,83],77:[2,83],78:[2,83],79:[2,83]},{4:[2,116],5:[2,116],7:[2,116],10:[2,116],18:[2,116],19:[2,116],23:[2,116],25:[2,116],26:[2,116],27:[2,116],28:[2,116],29:[2,116],32:[2,116],34:[2,116],35:[2,116],36:[2,116],37:[2,116],39:[2,116],41:[2,116],43:[2,116],44:[2,116],45:[2,116],46:[2,116],48:[2,116],71:[2,116],72:[2,116],78:[2,116],79:[2,116]},{4:[2,118],5:[2,118],7:[2,118],10:[2,118],18:[2,118],19:[2,118],23:[2,118],25:[2,118],26:[2,118],27:[2,118],28:[2,118],29:[2,118],32:[2,118],34:[2,118],35:[2,118],36:[2,118],37:[2,118],39:[2,118],41:[2,118],43:[2,118],44:[2,118],45:[2,118],46:[2,118],48:[2,118],71:[2,118],72:[2,118],78:[2,118],79:[2,118]},{23:[1,180],71:[1,94],72:[1,95],78:[1,96],79:[1,97]},{23:[1,181],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],74:[1,110],75:[1,111],76:[1,112],77:[1,113],78:[1,114],79:[1,115]},{53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],58:[1,182]},{26:[1,126]},{4:[2,79],5:[2,79],7:[2,79],10:[2,79],18:[2,79],19:[2,79],23:[2,79],25:[2,79],26:[2,79],27:[2,79],28:[2,79],29:[2,79],32:[2,79],34:[2,79],35:[2,79],36:[2,79],37:[2,79],39:[2,79],41:[2,79],43:[2,79],44:[2,79],45:[2,79],46:[2,79],48:[2,79],53:[2,79],54:[2,79],55:[2,79],56:[2,79],57:[2,79],58:[2,79],71:[2,79],72:[2,79],74:[2,79],75:[2,79],76:[2,79],77:[2,79],78:[2,79],79:[2,79]},{4:[1,37],5:[1,20],13:10,14:9,15:11,16:12,19:[1,18],20:183,26:[1,22],27:[1,21],28:[1,23],29:[1,24],31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{4:[2,47],5:[2,47],7:[2,47],10:[2,47],18:[2,47],19:[2,47],26:[2,47],27:[2,47],28:[2,47],29:[2,47],32:[2,47],35:[2,47],36:[2,47],37:[2,47],39:[2,47],41:[2,47],43:[2,47],44:[2,47],45:[2,47],46:[2,47],48:[2,47]},{4:[2,83],5:[2,83],19:[2,83],26:[2,83],27:[2,83],28:[2,83],29:[2,83],32:[2,83],36:[2,83],37:[2,83],39:[2,83],41:[2,83],43:[2,83],44:[2,83],45:[2,83],46:[2,83],48:[2,83],51:[1,78],53:[2,83],54:[2,83],55:[2,83],56:[2,83],57:[2,83]},{23:[1,181],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120]},{23:[1,184]},{23:[2,59],25:[1,185]},{23:[2,64],25:[2,64],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],74:[1,110],75:[1,111],76:[1,112],77:[1,113],78:[1,114],79:[1,115]},{23:[2,65],25:[2,65],78:[1,121],79:[1,122]},{23:[2,66],25:[2,66],71:[1,94],72:[1,95],78:[1,96],79:[1,97]},{23:[2,67],25:[2,67],78:[1,123],79:[1,124]},{4:[2,52],5:[2,52],7:[2,52],10:[2,52],18:[2,52],19:[2,52],26:[2,52],27:[2,52],28:[2,52],29:[2,52],32:[2,52],35:[2,52],36:[2,52],37:[2,52],39:[2,52],41:[2,52],43:[2,52],44:[2,52],45:[2,52],46:[2,52],48:[2,52]},{4:[2,68],5:[2,68],7:[2,68],10:[2,68],18:[2,68],19:[2,68],26:[2,68],27:[2,68],28:[2,68],29:[2,68],32:[2,68],35:[2,68],36:[2,68],37:[2,68],39:[2,68],41:[2,68],43:[2,68],44:[2,68],45:[2,68],46:[2,68],48:[2,68]},{4:[2,69],5:[2,69],7:[2,69],10:[2,69],18:[2,69],19:[2,69],26:[2,69],27:[2,69],28:[2,69],29:[2,69],32:[2,69],35:[2,69],36:[2,69],37:[2,69],39:[2,69],41:[2,69],43:[2,69],44:[2,69],45:[2,69],46:[2,69],48:[2,69],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120]},{4:[2,70],5:[2,70],7:[2,70],10:[2,70],18:[2,70],19:[2,70],26:[2,70],27:[2,70],28:[2,70],29:[2,70],32:[2,70],35:[2,70],36:[2,70],37:[2,70],39:[2,70],41:[2,70],43:[2,70],44:[2,70],45:[2,70],46:[2,70],48:[2,70],71:[1,94],72:[1,95],78:[1,96],79:[1,97]},{4:[2,71],5:[2,71],7:[2,71],10:[2,71],18:[2,71],19:[2,71],26:[2,71],27:[2,71],28:[2,71],29:[2,71],32:[2,71],35:[2,71],36:[2,71],37:[2,71],39:[2,71],41:[2,71],43:[2,71],44:[2,71],45:[2,71],46:[2,71],48:[2,71]},{4:[1,37],5:[1,20],8:186,9:187,10:[2,30],13:10,14:9,15:11,16:12,17:5,18:[1,7],19:[1,18],20:8,26:[1,22],27:[1,21],28:[1,23],29:[1,24],30:6,31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{7:[2,8],26:[2,8],27:[2,8],28:[2,8],29:[2,8]},{7:[2,9],26:[2,9],27:[2,9],28:[2,9],29:[2,9]},{7:[2,10],26:[2,10],27:[2,10],28:[2,10],29:[2,10]},{7:[2,11],26:[2,11],27:[2,11],28:[2,11],29:[2,11]},{23:[1,188]},{23:[2,21],25:[1,189]},{23:[2,23],25:[2,23]},{23:[2,25],25:[2,25]},{23:[2,27],25:[2,27]},{23:[2,29],25:[2,29]},{4:[2,43],5:[2,43],7:[2,43],10:[2,43],18:[2,43],19:[2,43],26:[2,43],27:[2,43],28:[2,43],29:[2,43],32:[2,43],35:[1,190],36:[2,43],37:[2,43],39:[2,43],41:[2,43],43:[2,43],44:[2,43],45:[2,43],46:[2,43],48:[2,43]},{4:[2,96],5:[2,96],7:[2,96],10:[2,96],18:[2,96],19:[2,96],23:[2,96],25:[2,96],26:[2,96],27:[2,96],28:[2,96],29:[2,96],32:[2,96],34:[2,96],35:[2,96],36:[2,96],37:[2,96],39:[2,96],41:[2,96],43:[2,96],44:[2,96],45:[2,96],46:[2,96],48:[2,96],71:[2,96],72:[2,96],78:[1,96],79:[1,97]},{4:[2,97],5:[2,97],7:[2,97],10:[2,97],18:[2,97],19:[2,97],23:[2,97],25:[2,97],26:[2,97],27:[2,97],28:[2,97],29:[2,97],32:[2,97],34:[2,97],35:[2,97],36:[2,97],37:[2,97],39:[2,97],41:[2,97],43:[2,97],44:[2,97],45:[2,97],46:[2,97],48:[2,97],71:[1,94],72:[2,97],78:[1,96],79:[1,97]},{4:[2,107],5:[2,107],7:[2,107],10:[2,107],18:[2,107],19:[2,107],23:[2,107],25:[2,107],26:[2,107],27:[2,107],28:[2,107],29:[2,107],32:[2,107],34:[2,107],35:[2,107],36:[2,107],37:[2,107],39:[2,107],41:[2,107],43:[2,107],44:[2,107],45:[2,107],46:[2,107],48:[2,107],71:[2,107],72:[2,107],78:[2,107],79:[2,107]},{4:[2,108],5:[2,108],7:[2,108],10:[2,108],18:[2,108],19:[2,108],23:[2,108],25:[2,108],26:[2,108],27:[2,108],28:[2,108],29:[2,108],32:[2,108],34:[2,108],35:[2,108],36:[2,108],37:[2,108],39:[2,108],41:[2,108],43:[2,108],44:[2,108],45:[2,108],46:[2,108],48:[2,108],71:[2,108],72:[2,108],78:[2,108],79:[2,108]},{4:[2,99],5:[2,99],7:[2,99],10:[2,99],18:[2,99],19:[2,99],23:[2,99],25:[2,99],26:[2,99],27:[2,99],28:[2,99],29:[2,99],32:[2,99],34:[2,99],35:[2,99],36:[2,99],37:[2,99],39:[2,99],41:[2,99],43:[2,99],44:[2,99],45:[2,99],46:[2,99],48:[2,99],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],71:[2,99],72:[2,99],78:[2,99],79:[2,99]},{4:[2,100],5:[2,100],7:[2,100],10:[2,100],18:[2,100],19:[2,100],23:[2,100],25:[2,100],26:[2,100],27:[2,100],28:[2,100],29:[2,100],32:[2,100],34:[2,100],35:[2,100],36:[2,100],37:[2,100],39:[2,100],41:[2,100],43:[2,100],44:[2,100],45:[2,100],46:[2,100],48:[2,100],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],71:[2,100],72:[2,100],78:[2,100],79:[2,100]},{4:[2,101],5:[2,101],7:[2,101],10:[2,101],18:[2,101],19:[2,101],23:[2,101],25:[2,101],26:[2,101],27:[2,101],28:[2,101],29:[2,101],32:[2,101],34:[2,101],35:[2,101],36:[2,101],37:[2,101],39:[2,101],41:[2,101],43:[2,101],44:[2,101],45:[2,101],46:[2,101],48:[2,101],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],71:[2,101],72:[2,101],78:[2,101],79:[2,101]},{4:[2,102],5:[2,102],7:[2,102],10:[2,102],18:[2,102],19:[2,102],23:[2,102],25:[2,102],26:[2,102],27:[2,102],28:[2,102],29:[2,102],32:[2,102],34:[2,102],35:[2,102],36:[2,102],37:[2,102],39:[2,102],41:[2,102],43:[2,102],44:[2,102],45:[2,102],46:[2,102],48:[2,102],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],71:[2,102],72:[2,102],78:[2,102],79:[2,102]},{4:[2,105],5:[2,105],7:[2,105],10:[2,105],18:[2,105],19:[2,105],23:[2,105],25:[2,105],26:[2,105],27:[2,105],28:[2,105],29:[2,105],32:[2,105],34:[2,105],35:[2,105],36:[2,105],37:[2,105],39:[2,105],41:[2,105],43:[2,105],44:[2,105],45:[2,105],46:[2,105],48:[2,105],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],71:[2,105],72:[2,105],78:[2,105],79:[2,105]},{4:[2,106],5:[2,106],7:[2,106],10:[2,106],18:[2,106],19:[2,106],23:[2,106],25:[2,106],26:[2,106],27:[2,106],28:[2,106],29:[2,106],32:[2,106],34:[2,106],35:[2,106],36:[2,106],37:[2,106],39:[2,106],41:[2,106],43:[2,106],44:[2,106],45:[2,106],46:[2,106],48:[2,106],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],71:[2,106],72:[2,106],78:[2,106],79:[2,106]},{4:[2,73],5:[2,73],7:[2,73],10:[2,73],18:[2,73],19:[2,73],23:[2,73],25:[2,73],26:[2,73],27:[2,73],28:[2,73],29:[2,73],32:[2,73],34:[2,73],35:[2,73],36:[2,73],37:[2,73],39:[2,73],41:[2,73],43:[2,73],44:[2,73],45:[2,73],46:[2,73],48:[2,73],53:[2,73],54:[2,73],55:[1,118],56:[1,119],57:[1,120],58:[2,73],71:[2,73],72:[2,73],74:[2,73],75:[2,73],76:[2,73],77:[2,73],78:[2,73],79:[2,73]},{4:[2,74],5:[2,74],7:[2,74],10:[2,74],18:[2,74],19:[2,74],23:[2,74],25:[2,74],26:[2,74],27:[2,74],28:[2,74],29:[2,74],32:[2,74],34:[2,74],35:[2,74],36:[2,74],37:[2,74],39:[2,74],41:[2,74],43:[2,74],44:[2,74],45:[2,74],46:[2,74],48:[2,74],53:[2,74],54:[2,74],55:[1,118],56:[1,119],57:[1,120],58:[2,74],71:[2,74],72:[2,74],74:[2,74],75:[2,74],76:[2,74],77:[2,74],78:[2,74],79:[2,74]},{4:[2,75],5:[2,75],7:[2,75],10:[2,75],18:[2,75],19:[2,75],23:[2,75],25:[2,75],26:[2,75],27:[2,75],28:[2,75],29:[2,75],32:[2,75],34:[2,75],35:[2,75],36:[2,75],37:[2,75],39:[2,75],41:[2,75],43:[2,75],44:[2,75],45:[2,75],46:[2,75],48:[2,75],53:[2,75],54:[2,75],55:[2,75],56:[2,75],57:[2,75],58:[2,75],71:[2,75],72:[2,75],74:[2,75],75:[2,75],76:[2,75],77:[2,75],78:[2,75],79:[2,75]},{4:[2,76],5:[2,76],7:[2,76],10:[2,76],18:[2,76],19:[2,76],23:[2,76],25:[2,76],26:[2,76],27:[2,76],28:[2,76],29:[2,76],32:[2,76],34:[2,76],35:[2,76],36:[2,76],37:[2,76],39:[2,76],41:[2,76],43:[2,76],44:[2,76],45:[2,76],46:[2,76],48:[2,76],53:[2,76],54:[2,76],55:[2,76],56:[2,76],57:[2,76],58:[2,76],71:[2,76],72:[2,76],74:[2,76],75:[2,76],76:[2,76],77:[2,76],78:[2,76],79:[2,76]},{4:[2,77],5:[2,77],7:[2,77],10:[2,77],18:[2,77],19:[2,77],23:[2,77],25:[2,77],26:[2,77],27:[2,77],28:[2,77],29:[2,77],32:[2,77],34:[2,77],35:[2,77],36:[2,77],37:[2,77],39:[2,77],41:[2,77],43:[2,77],44:[2,77],45:[2,77],46:[2,77],48:[2,77],53:[2,77],54:[2,77],55:[2,77],56:[2,77],57:[2,77],58:[2,77],71:[2,77],72:[2,77],74:[2,77],75:[2,77],76:[2,77],77:[2,77],78:[2,77],79:[2,77]},{4:[2,103],5:[2,103],7:[2,103],10:[2,103],18:[2,103],19:[2,103],23:[2,103],25:[2,103],26:[2,103],27:[2,103],28:[2,103],29:[2,103],32:[2,103],34:[2,103],35:[2,103],36:[2,103],37:[2,103],39:[2,103],41:[2,103],43:[2,103],44:[2,103],45:[2,103],46:[2,103],48:[2,103],71:[2,103],72:[2,103],78:[2,103],79:[2,103]},{4:[2,104],5:[2,104],7:[2,104],10:[2,104],18:[2,104],19:[2,104],23:[2,104],25:[2,104],26:[2,104],27:[2,104],28:[2,104],29:[2,104],32:[2,104],34:[2,104],35:[2,104],36:[2,104],37:[2,104],39:[2,104],41:[2,104],43:[2,104],44:[2,104],45:[2,104],46:[2,104],48:[2,104],71:[2,104],72:[2,104],78:[2,104],79:[2,104]},{4:[2,109],5:[2,109],7:[2,109],10:[2,109],18:[2,109],19:[2,109],23:[2,109],25:[2,109],26:[2,109],27:[2,109],28:[2,109],29:[2,109],32:[2,109],34:[2,109],35:[2,109],36:[2,109],37:[2,109],39:[2,109],41:[2,109],43:[2,109],44:[2,109],45:[2,109],46:[2,109],48:[2,109],71:[2,109],72:[2,109],78:[2,109],79:[2,109]},{4:[2,110],5:[2,110],7:[2,110],10:[2,110],18:[2,110],19:[2,110],23:[2,110],25:[2,110],26:[2,110],27:[2,110],28:[2,110],29:[2,110],32:[2,110],34:[2,110],35:[2,110],36:[2,110],37:[2,110],39:[2,110],41:[2,110],43:[2,110],44:[2,110],45:[2,110],46:[2,110],48:[2,110],71:[2,110],72:[2,110],78:[2,110],79:[2,110]},{4:[2,113],5:[2,113],7:[2,113],10:[2,113],18:[2,113],19:[2,113],23:[2,113],25:[2,113],26:[2,113],27:[2,113],28:[2,113],29:[2,113],32:[2,113],34:[2,113],35:[2,113],36:[2,113],37:[2,113],39:[2,113],41:[2,113],43:[2,113],44:[2,113],45:[2,113],46:[2,113],48:[2,113],71:[2,113],72:[2,113],78:[2,113],79:[2,113]},{4:[2,80],5:[2,80],7:[2,80],10:[2,80],18:[2,80],19:[2,80],23:[2,80],25:[2,80],26:[2,80],27:[2,80],28:[2,80],29:[2,80],32:[2,80],34:[2,80],35:[2,80],36:[2,80],37:[2,80],39:[2,80],41:[2,80],43:[2,80],44:[2,80],45:[2,80],46:[2,80],48:[2,80],53:[2,80],54:[2,80],55:[2,80],56:[2,80],57:[2,80],58:[2,80],71:[2,80],72:[2,80],74:[2,80],75:[2,80],76:[2,80],77:[2,80],78:[2,80],79:[2,80]},{4:[2,78],5:[2,78],7:[2,78],10:[2,78],18:[2,78],19:[2,78],23:[2,78],25:[2,78],26:[2,78],27:[2,78],28:[2,78],29:[2,78],32:[2,78],34:[2,78],35:[2,78],36:[2,78],37:[2,78],39:[2,78],41:[2,78],43:[2,78],44:[2,78],45:[2,78],46:[2,78],48:[2,78],53:[2,78],54:[2,78],55:[2,78],56:[2,78],57:[2,78],58:[2,78],71:[2,78],72:[2,78],74:[2,78],75:[2,78],76:[2,78],77:[2,78],78:[2,78],79:[2,78]},{4:[2,45],5:[2,45],7:[2,45],10:[2,45],18:[2,45],19:[2,45],26:[2,45],27:[2,45],28:[2,45],29:[2,45],32:[2,45],35:[2,45],36:[2,45],37:[2,45],39:[2,45],41:[2,45],43:[2,45],44:[2,45],45:[2,45],46:[2,45],48:[2,45]},{4:[2,50],5:[2,50],7:[2,50],10:[2,50],18:[2,50],19:[2,50],26:[2,50],27:[2,50],28:[2,50],29:[2,50],32:[2,50],35:[2,50],36:[2,50],37:[2,50],39:[2,50],41:[2,50],43:[2,50],44:[2,50],45:[2,50],46:[2,50],48:[2,50]},{4:[1,53],21:[1,54],26:[1,59],27:[1,61],28:[1,52],29:[1,62],33:193,38:191,42:192,50:194,52:[1,55],54:[1,57],58:[1,56],59:[1,58],60:[1,42],61:[1,43],62:[1,44],68:[1,45],69:[1,46],70:[1,47],73:[1,48],80:[1,60],81:[1,63],82:[1,64],83:[1,65],84:[1,66]},{4:[1,37],5:[1,20],9:195,10:[2,30],13:10,14:9,15:11,16:12,17:36,18:[1,7],19:[1,18],20:8,26:[1,22],27:[1,21],28:[1,23],29:[1,24],30:6,31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{10:[1,196]},{4:[1,37],5:[1,20],13:10,14:9,15:11,16:12,19:[1,18],20:197,26:[1,22],27:[1,21],28:[1,23],29:[1,24],31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{26:[1,198],27:[1,199],28:[1,200],29:[1,201]},{4:[1,37],5:[1,20],13:10,14:9,15:11,16:12,19:[1,18],20:202,26:[1,22],27:[1,21],28:[1,23],29:[1,24],31:13,32:[1,14],36:[1,15],37:[1,16],39:[1,17],41:[1,19],43:[1,25],44:[1,26],45:[1,27],46:[1,28],48:[1,29]},{23:[2,60],25:[2,60],53:[1,116],54:[1,117],55:[1,118],56:[1,119],57:[1,120],74:[1,110],75:[1,111],76:[1,112],77:[1,113],78:[1,114],79:[1,115]},{23:[2,61],25:[2,61],78:[1,121],79:[1,122]},{23:[2,62],25:[2,62],71:[1,94],72:[1,95],78:[1,96],79:[1,97]},{23:[2,63],25:[2,63],78:[1,123],79:[1,124]},{10:[1,203]},{1:[2,3]},{4:[2,19],5:[2,19],10:[2,19],18:[2,19],19:[2,19],26:[2,19],27:[2,19],28:[2,19],29:[2,19],32:[2,19],36:[2,19],37:[2,19],39:[2,19],41:[2,19],43:[2,19],44:[2,19],45:[2,19],46:[2,19],48:[2,19]},{23:[2,22],25:[2,22]},{23:[2,24],25:[2,24]},{23:[2,26],25:[2,26]},{23:[2,28],25:[2,28]},{4:[2,44],5:[2,44],7:[2,44],10:[2,44],18:[2,44],19:[2,44],26:[2,44],27:[2,44],28:[2,44],29:[2,44],32:[2,44],35:[2,44],36:[2,44],37:[2,44],39:[2,44],41:[2,44],43:[2,44],44:[2,44],45:[2,44],46:[2,44],48:[2,44]},{1:[2,1]}],
defaultActions: {38:[2,4],90:[2,2],196:[2,3],203:[2,1]},
parseError: function parseError(str,hash){if(hash.recoverable){this.trace(str)}else{throw new Error(str)}},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};
/* generated by jison-lex 0.2.1 */
var lexer = (function(){
var lexer = {

EOF:1,

parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash)}else{throw new Error(str)}},

// resets the lexer, sets new input
setInput:function (input){this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match="";this.conditionStack=["INITIAL"];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0]}this.offset=0;return this},

// consumes and returns one char from the input
input:function (){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++}else{this.yylloc.last_column++}if(this.options.ranges){this.yylloc.range[1]++}this._input=this._input.slice(1);return ch},

// unshifts one char (or a string) into the input
unput:function (ch){var len=ch.length;var lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len-1);this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len]}this.yyleng=this.yytext.length;return this},

// When called from action, caches matched text and appends it on next action
more:function (){this._more=true;return this},

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function (){if(this.options.backtrack_lexer){this._backtrack=true}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}return this},

// retain first n characters of the match
less:function (n){this.unput(this.match.slice(n))},

// displays already matched input, i.e. for error messages
pastInput:function (){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},

// displays upcoming input, i.e. for error messages
upcomingInput:function (){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length)}return(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function (){var pre=this.pastInput();var c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^"},

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0)}}lines=match[0].match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno+=lines.length}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng]}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false}if(token){return token}else if(this._backtrack){for(var k in backup){this[k]=backup[k]}return false}return false},

// return next match in input
next:function (){if(this.done){return this.EOF}if(!this._input){this.done=true}var token,match,tempMatch,index;if(!this._more){this.yytext="";this.match=""}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token}else if(this._backtrack){match=false;continue}else{return false}}else if(!this.options.flex){break}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token}return false}if(this._input===""){return this.EOF}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}},

// return next match that has a token
lex:function lex(){var r=this.next();if(r){return r}else{return this.lex()}},

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition){this.conditionStack.push(condition)},

// pop the previously active lexer condition state off the condition stack
popState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop()}else{return this.conditionStack[0]}},

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules}else{return this.conditions["INITIAL"].rules}},

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n]}else{return"INITIAL"}},

// alias for begin(condition)
pushState:function pushState(condition){this.begin(condition)},

// return the number of states currently on the stack
stateStackSize:function stateStackSize(){return this.conditionStack.length},
options: {"flex":true,"case-insensitive":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* ignore */
break;
case 1:/* ignore */
break;
case 2:return 27;
break;
case 3:return 26;
break;
case 4:return 28;
break;
case 5:return 29;
break;
case 6:return 5;
break;
case 7:return 7;
break;
case 8:return 21;
break;
case 9:return 23;
break;
case 10:return 25;
break;
case 11:return 53;
break;
case 12:return 54;
break;
case 13:return 55;
break;
case 14:return 56;
break;
case 15:return 57;
break;
case 16:return 58;
break;
case 17:return 76;
break;
case 18:return 'GT';
break;
case 19:return 74;
break;
case 20:return 75;
break;
case 21:return 51;
break;
case 22:return 79;
break;
case 23:return 78;
break;
case 24:return 61;
break;
case 25:return 60;
break;
case 26:return 71;
break;
case 27:return 72;
break;
case 28:return 43;
break;
case 29:return 44;
break;
case 30:return 41;
break;
case 31:return 45;
break;
case 32:return 18;
break;
case 33:return 32;
break;
case 34:return 34;
break;
case 35:return 35;
break;
case 36:return 37;
break;
case 37:return 39;
break;
case 38:return 48;
break;
case 39:return 47;
break;
case 40:return 36;
break;
case 41:return 46;
break;
case 42:return 73;
break;
case 43:return 73;
break;
case 44:return 62;
break;
case 45:return 68;
break;
case 46:return 70;
break;
case 47:yy_.yytext = "red"; return 80;
break;
case 48:yy_.yytext = "green"; return 80;
break;
case 49:yy_.yytext = "blue"; return 80;
break;
case 50:return 59;
break;
case 51:return 67;
break;
case 52:return 65;
break;
case 53:return 64;
break;
case 54:return 63;
break;
case 55:return 66;
break;
case 56:return 4;
break;
case 57:return 69;
break;
case 58:return 83;
break;
case 59:return 81;
break;
case 60:return 82;
break;
case 61:return 84;
break;
case 62:return 4;
break;
case 63:return 19;
break;
case 64:return 52;
break;
case 65:/* ignore */
break;
case 66:return 10;
break;
case 67:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\/\/.*)/i,/^(?:\/\*((\*+[^/*])|([^*]))*\**\*\/)/i,/^(?:([fF][aA][rR][bB][aA][\-][a-zA-Z][a-zA-Z0-9\_]*))/i,/^(?:([cC][iI][sS][lL][oO][\-][a-zA-Z][a-zA-Z0-9\_]*))/i,/^(?:([pP][rR][aA][vV][dD][iI][vV][oO][sS][tT][\-][a-zA-Z][a-zA-Z0-9\_]*))/i,/^(?:([sS][mM][eE][rR][\-][a-zA-Z][a-zA-Z0-9\_]*))/i,/^(?:\{)/i,/^(?:\})/i,/^(?:\()/i,/^(?:\))/i,/^(?:,)/i,/^(?:\+)/i,/^(?:-)/i,/^(?:\*)/i,/^(?:\/)/i,/^(?:%)/i,/^(?:\|)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?::=)/i,/^(?:!=)/i,/^(?:=)/i,/^(?:NEPRAVDA(?=[^a-zA-Z0-9_]))/i,/^(?:PRAVDA(?=[^a-zA-Z0-9_]))/i,/^(?:A(?=[^a-zA-Z0-9_]))/i,/^(?:ALEBO(?=[^a-zA-Z0-9_]))/i,/^(?:KROK(?=[^a-zA-Z0-9_]))/i,/^(?:OTOC(?=[^a-zA-Z0-9_]))/i,/^(?:POLOZ(?=[^a-zA-Z0-9_]))/i,/^(?:ZOBER(?=[^a-zA-Z0-9_]))/i,/^(?:PRIKAZ(?=[^a-zA-Z0-9_]))/i,/^(?:AK(?=[^a-zA-Z0-9_]))/i,/^(?:TAK(?=[^a-zA-Z0-9_]))/i,/^(?:INAK(?=[^a-zA-Z0-9_]))/i,/^(?:OPAKUJ(?=[^a-zA-Z0-9_]))/i,/^(?:PRERUS(?=[^a-zA-Z0-9_]))/i,/^(?:VRAT(?=[^a-zA-Z0-9_]))/i,/^(?:SA(?=[^a-zA-Z0-9_]))/i,/^(?:POKIAL(?=[^a-zA-Z0-9_]))/i,/^(?:VYPNI(?=[^a-zA-Z0-9_]))/i,/^(?:NIE(?=[^a-zA-Z0-9_]))/i,/^(?:!(?=[^a-zA-Z0-9_]))/i,/^(?:JE(?=[^a-zA-Z0-9_]))/i,/^(?:MA(?=[^a-zA-Z0-9_]))/i,/^(?:NEMA(?=[^a-zA-Z0-9_]))/i,/^(?:CERVENA(?=[^a-zA-Z0-9_]))/i,/^(?:ZELENA(?=[^a-zA-Z0-9_]))/i,/^(?:MODRA(?=[^a-zA-Z0-9_]))/i,/^(?:VYSKA(?=[^a-zA-Z0-9_]))/i,/^(?:TEHLA(?=[^a-zA-Z0-9_]))/i,/^(?:STENA(?=[^a-zA-Z0-9_]))/i,/^(?:JAMA(?=[^a-zA-Z0-9_]))/i,/^(?:DIERA(?=[^a-zA-Z0-9_]))/i,/^(?:VOLNO(?=[^a-zA-Z0-9_]))/i,/^(?:VSADE(?=[^a-zA-Z0-9_]))/i,/^(?:OTOCENY(?=[^a-zA-Z0-9_]))/i,/^(?:VLAVO(?=[^a-zA-Z0-9_]))/i,/^(?:VPRAVO(?=[^a-zA-Z0-9_]))/i,/^(?:HORE(?=[^a-zA-Z0-9_]))/i,/^(?:DOLE(?=[^a-zA-Z0-9_]))/i,/^(?:\^)/i,/^(?:([a-zA-Z][a-zA-Z0-9\_]*))/i,/^(?:([0-9]+))/i,/^(?:\s+)/i,/^(?:$)/i,/^(?:.)/i],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); };
exports.main = function commonjsMain(args){if(!args[1]){console.log("Usage: "+args[0]+" FILE");process.exit(1)}var source=require("fs").readFileSync(require("path").normalize(args[1]),"utf8");return exports.parser.parse(source)};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}